{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAW,CACfC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,uBAC9BE,KAAMH,SAASC,cAAc,sBAC7BG,OAAQJ,SAASC,cAAc,yBAyBjC,SAASI,EAAcC,EAAUJ,GAC/B,IAAMK,EAAgBC,KAAKC,SAAW,GAEhCC,EAAU,CAAEJ,WAAUJ,SAE5B,OAAO,IAAIS,SAAQ,SAACC,EAAKC,GACvBC,YAAW,WACLP,EACFK,EAAIF,GAEJG,EAAIH,E,OAhCZZ,EAASC,KAAKgB,iBAAiB,UAE/B,SAAiBC,GACfA,EAAIC,iBAMJ,IAJA,IAAIC,EAAQC,OAAOrB,EAASI,MAAMkB,OAC5BjB,EAAOgB,OAAOrB,EAASK,KAAKiB,OAC5BhB,EAASe,OAAOrB,EAASM,OAAOgB,OAE7BC,EAAW,EAAGA,EAAWjB,EAAQiB,GAAY,EACpDhB,EAAcgB,EAAUH,GACrBI,MAAK,SAAAC,G,IAAGjB,EAAQiB,EAARjB,SAAUJ,EAAKqB,EAALrB,MACjBN,EAAA4B,OAAOC,QAAQ,uBAAwCC,OAAfpB,EAAS,QAAYoB,OAANxB,EAAM,M,GAC5DgB,GACFS,OAAM,SAAAJ,G,IAAGjB,EAAQiB,EAARjB,SAAUJ,EAAKqB,EAALrB,MAClBN,EAAA4B,OAAOI,QAAQ,sBAAqCF,OAAfpB,EAAS,QAAYoB,OAANxB,EAAM,M,GACzDgB,GACLA,GAASf,EAEXa,EAAIa,OAAOC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formRefs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('input[name=\"delay\"]'),\n  step: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n};\n\nformRefs.form.addEventListener('submit', promGen);\n\nfunction promGen(evt) {\n  evt.preventDefault();\n\n  let delay = Number(formRefs.delay.value);\n  const step = Number(formRefs.step.value);\n  const amount = Number(formRefs.amount.value);\n\n  for (let position = 0; position < amount; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      }, delay)\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      }, delay);\n    delay += step;\n  }\n  evt.target.reset();\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = { position, delay };\n\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        res(promise);\n      } else {\n        rej(promise);\n      }\n    });\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$formRefs","form","document","querySelector","delay","step","amount","$ce04d3a99e08e73b$var$createPromise","position","shouldResolve","Math","random","promise","Promise","res","rej","setTimeout","addEventListener","evt","preventDefault","delay1","Number","value","position1","then","param","Notify","success","concat","catch","failure","target","reset"],"version":3,"file":"03-promises.b6031d42.js.map"}