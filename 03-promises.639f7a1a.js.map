{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAoCA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEhCC,EAAU,C,SAAEL,E,MAAUC,GAE5B,OAAO,IAAIK,SAAQ,CAACC,EAAKC,KACvBC,YAAW,KACLP,EACFK,EAAIF,GAEJG,EAAIH,EAAQ,GAEbJ,EAAM,G,CA9CAS,SAASC,cAAc,SAE/BC,iBAAiB,UAWtB,SAAiBC,GACfA,EAAIC,iBAEJ,IAAIC,EAAQC,OAAOH,EAAII,OAAOC,SAASjB,MAAMkB,OAC7C,MAAMC,EAAOJ,OAAOH,EAAII,OAAOC,SAASE,KAAKD,OACvCE,EAASL,OAAOH,EAAII,OAAOC,SAASG,OAAOF,OACjDG,QAAQC,IAAIV,EAAII,OAAOC,SAASG,OAAOF,OAEvC,IAAK,IAAIK,EAAW,EAAGA,EAAWH,EAAQG,GAAY,EACpDzB,EAAcyB,EAAUT,GACrBU,MAAK,EAACzB,SAAEA,EAAQC,MAAEA,MACjBJ,EAAA6B,OAAOC,QAAQ,uBAAqB3B,QAAiBC,MAAU,GAC9Dc,GACFa,OAAM,EAAC5B,SAAEA,EAAQC,MAAEA,MAClBJ,EAAA6B,OAAOG,QAAQ,sBAAoB7B,QAAeC,MAAU,GAC3Dc,GACLA,GAASK,EAEXP,EAAII,OAAOa,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', promGen);\n\n// const formRefs = {\n//   form: document.querySelector('.form'),\n//   delay: document.querySelector('input[name=\"delay\"]'),\n//   step: document.querySelector('input[name=\"step\"]'),\n//   amount: document.querySelector('input[name=\"amount\"]'),\n// };\n\n// formRefs.form.addEventListener('submit', promGen);\n\nfunction promGen(evt) {\n  evt.preventDefault();\n\n  let delay = Number(evt.target.elements.delay.value);\n  const step = Number(evt.target.elements.step.value);\n  const amount = Number(evt.target.elements.amount.value);\n  console.dir(evt.target.elements.amount.value);\n\n  for (let position = 0; position < amount; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      }, delay)\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      }, delay);\n    delay += step;\n  }\n  evt.target.reset();\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = { position, delay };\n\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        res(promise);\n      } else {\n        rej(promise);\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","promise","Promise","res","rej","setTimeout","document","querySelector","addEventListener","evt","preventDefault","delay1","Number","target","elements","value","step","amount","console","dir","position1","then","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.639f7a1a.js.map"}